         
name: Compile Sketch

# The workflow will run on every push and pull request to the repository
on:
  - push
  - pull_request

jobs:
  compile-sketch:
    name: Compile BlinkHub
    runs-on: ubuntu-latest
    env: 
      SECRET_SSID: ${{secrets.SECRET_SSID}}
      SECRET_OPTIONAL_PASS: ${{secrets.SECRET_OPTIONAL_PASS}}
      PASSWORD: ${{secrets.PASSWORD}}
      UNIQUE_ID: ${{secrets.UNIQUE_ID}}
      APPKEY: ${{secrets.APPKEY}}
      SKETCHES_REPORTS_PATH: sketches-reports
      
    steps:
      # This step makes the contents of the repository available to the workflow
      - name: Checkout repository
        uses: actions/checkout@v4
      # For more information: https://github.com/arduino/compile-sketches#readme
      - name: BlinkHub Compile
        uses: arduino/compile-sketches@v1
        with:
          # The default is to compile for the Arduino Uno board. If you want to compile for other boards, use the `fqbn` input.
          fqbn: arduino:samd:mkrwifi1010
          platforms: |
              - name: arduino:samd
          artifact-name-suffix: arduino-samd-mkrwifi1010
          sketch-paths: |
            - ./BlinkHub/BlinkHub_/
          libraries: |
            #- source-path: ./BlinkHub/libraries/
            - name: Adafruit BusIO
            - name: Adafruit DotStar
            - name: SD
            - name: WiFiNINA
            - name: ArduinoHttpClient
            - name: Arduino_MKRIoTCarrier
            - name: Arduino_BQ24195
            - name: Arduino_APDS9960
            - name: Arduino_LPS22HB
            - name: BSEC Software Library
            - name: Arduino_HTS221
            - name: Arduino_LSM6DSOX
            - name: Arduino_LSM6DS3
            - name: Arduino_MCHPTouch
            - name: Adafruit GFX Library
            - name: Adafruit ST7735 and ST7789 Library
            - name: ArduinoJson
            - name: StreamUtils
            - name: RTCZero
          sketches-report-path: ${{ env.SKETCHES_REPORTS_PATH }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-deltas-report: true
            
#      - name: Save Report as Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          if-no-files-found: error
#          path: ${{ env.SKETCHES_REPORTS_PATH }}
#          name: sketches-report-${{ matrix.board.artifact-name-suffix }}
          
      - name: Badge Action
        uses: emibcn/badge-action@v2.0.3
        with:
            label: BlinkHub Compiled
            status: $SUCCESS
            path: '.github/badges/compiled.svg'
          